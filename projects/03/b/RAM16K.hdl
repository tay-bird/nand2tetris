// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(
      in=load,
      a=LoadR0,
      b=LoadR1,
      c=LoadR2,
      d=LoadR3,
      sel=address[12..13]);

    RAM4K(in=in, load=LoadR0, address=address[0..11], out=ROut0);
    RAM4K(in=in, load=LoadR1, address=address[0..11], out=ROut1);
    RAM4K(in=in, load=LoadR2, address=address[0..11], out=ROut2);
    RAM4K(in=in, load=LoadR3, address=address[0..11], out=ROut3);

    Mux4Way16(
      a=ROut0,
      b=ROut1,
      c=ROut2,
      d=ROut3,
      sel=address[12..13],
      out=out);
}
